{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { defaultMessages, defaultUserInfos, messageFromClient } from './dataExample';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nconst _c0 = [\"messageInput\"];\n\nfunction ChatInnerComponent_ng_container_1_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelement(2, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 18);\n    i0.ɵɵelementStart(4, \"a\", 19);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"span\", 20);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"src\", \"./assets/media/\" + ctx_r3.getUser(message_r2.user).avatar, i0.ɵɵsanitizeUrl);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.getUser(message_r2.user).name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(message_r2.time);\n  }\n}\n\nfunction ChatInnerComponent_ng_container_1_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"span\", 20);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"a\", 22);\n    i0.ɵɵtext(5, \" You \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 23);\n    i0.ɵɵelement(7, \"img\", 17);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(message_r2.time);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"src\", \"./assets/media/\" + ctx_r4.getUser(message_r2.user).avatar, i0.ɵɵsanitizeUrl);\n  }\n}\n\nconst _c1 = function (a0, a1, a2, a3) {\n  return {\n    \"d-flex\": a0,\n    \"d-none\": a1,\n    \"justify-content-start\": a2,\n    \"justify-content-end\": a3\n  };\n};\n\nfunction ChatInnerComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\", 12);\n    i0.ɵɵelementStart(3, \"div\", 13);\n    i0.ɵɵtemplate(4, ChatInnerComponent_ng_container_1_ng_container_4_Template, 8, 3, \"ng-container\", 14);\n    i0.ɵɵtemplate(5, ChatInnerComponent_ng_container_1_ng_container_5_Template, 8, 2, \"ng-container\", 14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"div\", 15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r2 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction4(7, _c1, !ctx_r0.isDrawer, message_r2.template, message_r2.type === \"in\", message_r2.type !== \"in\"));\n    i0.ɵɵattribute(\"data-kt-element\", \"template-\" + message_r2.type);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", \"align-items-\" + (message_r2.type === \"in\" ? \"start\" : \"end\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", message_r2.type === \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", message_r2.type !== \"in\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r0.getMessageCssClass(message_r2))(\"innerHTML\", message_r2.text, i0.ɵɵsanitizeHtml);\n  }\n}\n\nexport class ChatInnerComponent {\n  constructor() {\n    this.isDrawer = false;\n    this.class = 'card-body';\n    this.id = this.isDrawer ? 'kt_drawer_chat_messenger_body' : 'kt_chat_messenger_body';\n    this.messages$ = new BehaviorSubject(defaultMessages);\n    this.messagesObs = this.messages$.asObservable();\n  }\n\n  submitMessage() {\n    const text = this.messageInput.nativeElement.value;\n    const newMessage = {\n      user: 2,\n      type: 'out',\n      text,\n      time: 'Just now'\n    };\n    this.addMessage(newMessage); // auto answer\n\n    setTimeout(() => {\n      this.addMessage(messageFromClient);\n    }, 4000); // clear input\n\n    this.messageInput.nativeElement.value = '';\n  }\n\n  addMessage(newMessage) {\n    const messages = [...this.messages$.value];\n    messages.push(newMessage);\n    this.messages$.next(messages);\n  }\n\n  getUser(user) {\n    return defaultUserInfos[user];\n  }\n\n  getMessageCssClass(message) {\n    return `p-5 rounded text-dark fw-bold mw-lg-400px bg-light-${message.type === 'in' ? 'info' : 'primary'} text-${message.type === 'in' ? 'start' : 'end'}`;\n  }\n\n  ngOnInit() {}\n\n}\n\nChatInnerComponent.ɵfac = function ChatInnerComponent_Factory(t) {\n  return new (t || ChatInnerComponent)();\n};\n\nChatInnerComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ChatInnerComponent,\n  selectors: [[\"app-chat-inner\"]],\n  viewQuery: function ChatInnerComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(_c0, 7);\n    }\n\n    if (rf & 2) {\n      let _t;\n\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.messageInput = _t.first);\n    }\n  },\n  hostVars: 3,\n  hostBindings: function ChatInnerComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      i0.ɵɵhostProperty(\"id\", ctx.id);\n      i0.ɵɵclassMap(ctx.class);\n    }\n  },\n  inputs: {\n    isDrawer: \"isDrawer\"\n  },\n  decls: 14,\n  vars: 8,\n  consts: [[\"data-kt-element\", \"messages\", \"data-kt-scroll\", \"true\", \"data-kt-scroll-activate\", \"{default: false, lg: true}\", \"data-kt-scroll-max-height\", \"auto\", 1, \"scroll-y\", \"me-n5\", \"pe-5\", 3, \"ngClass\"], [4, \"ngFor\", \"ngForOf\"], [1, \"card-footer\", \"pt-4\", 3, \"id\"], [\"rows\", \"1\", \"data-kt-element\", \"input\", \"placeholder\", \"Type a message\", 1, \"form-control\", \"form-control-flush\", \"mb-3\"], [\"messageInput\", \"\"], [1, \"d-flex\", \"flex-stack\"], [1, \"d-flex\", \"align-items-center\", \"me-2\"], [\"type\", \"button\", \"ngbTooltip\", \"Coming soon\", 1, \"btn\", \"btn-sm\", \"btn-icon\", \"btn-active-light-primary\", \"me-1\"], [1, \"bi\", \"bi-paperclip\", \"fs-3\"], [1, \"bi\", \"bi-upload\", \"fs-3\"], [\"type\", \"button\", \"data-kt-element\", \"send\", 1, \"btn\", \"btn-primary\", 3, \"click\"], [1, \"mb-10\", 3, \"ngClass\"], [1, \"d-flex\", \"flex-column\", \"align-items\", 3, \"ngClass\"], [1, \"d-flex\", \"align-items-center\", \"mb-2\"], [4, \"ngIf\"], [\"data-kt-element\", \"message-text\", 3, \"ngClass\", \"innerHTML\"], [\"div\", \"\", 1, \"symbol\", \"symbol-35px\", \"symbol-circle\"], [\"alt\", \"Pic\", 3, \"src\"], [1, \"ms-3\"], [\"href\", \"#\", 1, \"fs-5\", \"fw-bolder\", \"text-gray-900\", \"text-hover-primary\", \"me-1\"], [1, \"text-muted\", \"fs-7\", \"mb-1\"], [1, \"me-3\"], [\"href\", \"#\", 1, \"fs-5\", \"fw-bolder\", \"text-gray-900\", \"text-hover-primary\", \"ms-1\"], [1, \"symbol\", \"symbol-35px\", \"symbol-circle\"]],\n  template: function ChatInnerComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, ChatInnerComponent_ng_container_1_Template, 7, 12, \"ng-container\", 1);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"div\", 2);\n      i0.ɵɵelement(4, \"textarea\", 3, 4);\n      i0.ɵɵelementStart(6, \"div\", 5);\n      i0.ɵɵelementStart(7, \"div\", 6);\n      i0.ɵɵelementStart(8, \"button\", 7);\n      i0.ɵɵelement(9, \"i\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"button\", 7);\n      i0.ɵɵelement(11, \"i\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"button\", 10);\n      i0.ɵɵlistener(\"click\", function ChatInnerComponent_Template_button_click_12_listener() {\n        return ctx.submitMessage();\n      });\n      i0.ɵɵtext(13, \" Send \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵproperty(\"ngClass\", !ctx.isDrawer ? \"h-300px h-lg-auto\" : \"\");\n      i0.ɵɵattribute(\"data-kt-scroll-dependencies\", ctx.isDrawer ? \"#kt_drawer_chat_messenger_header, #kt_drawer_chat_messenger_footer\" : \"#kt_header, #kt_toolbar, #kt_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer\")(\"data-kt-scroll-wrappers\", ctx.isDrawer ? \"#kt_drawer_chat_messenger_body\" : \"#kt_content, #kt_chat_messenger_body\")(\"data-kt-scroll-offset\", ctx.isDrawer ? \"0px\" : \"-2px\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 6, ctx.messagesObs));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"id\", ctx.isDrawer ? \"kt_drawer_chat_messenger_footer\" : \"kt_chat_messenger_footer\");\n    }\n  },\n  directives: [i1.NgClass, i1.NgForOf, i1.NgIf],\n  pipes: [i1.AsyncPipe],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/andres.mayorga/Projects/CMSOFT/cmsoft-angular/src/app/_metronic/partials/content/chat-inner/chat-inner.component.ts","/Users/andres.mayorga/Projects/CMSOFT/cmsoft-angular/src/app/_metronic/partials/content/chat-inner/chat-inner.component.html"],"names":[],"mappings":"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","sourcesContent":["import {\r\n  Component,\r\n  ElementRef,\r\n  HostBinding,\r\n  Input,\r\n  OnInit,\r\n  ViewChild,\r\n} from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport {\r\n  defaultMessages,\r\n  defaultUserInfos,\r\n  messageFromClient,\r\n  MessageModel,\r\n  UserInfoModel,\r\n} from './dataExample';\r\n\r\n@Component({\r\n  selector: 'app-chat-inner',\r\n  templateUrl: './chat-inner.component.html',\r\n})\r\nexport class ChatInnerComponent implements OnInit {\r\n  @Input() isDrawer: boolean = false;\r\n  @HostBinding('class') class = 'card-body';\r\n  @HostBinding('id') id = this.isDrawer\r\n    ? 'kt_drawer_chat_messenger_body'\r\n    : 'kt_chat_messenger_body';\r\n  @ViewChild('messageInput', { static: true })\r\n  messageInput: ElementRef<HTMLTextAreaElement>;\r\n\r\n  private messages$: BehaviorSubject<Array<MessageModel>> = new BehaviorSubject<\r\n    Array<MessageModel>\r\n  >(defaultMessages);\r\n  messagesObs: Observable<Array<MessageModel>>;\r\n\r\n  constructor() {\r\n    this.messagesObs = this.messages$.asObservable();\r\n  }\r\n\r\n  submitMessage(): void {\r\n    const text = this.messageInput.nativeElement.value;\r\n    const newMessage: MessageModel = {\r\n      user: 2,\r\n      type: 'out',\r\n      text,\r\n      time: 'Just now',\r\n    };\r\n    this.addMessage(newMessage);\r\n    // auto answer\r\n    setTimeout(() => {\r\n      this.addMessage(messageFromClient);\r\n    }, 4000);\r\n    // clear input\r\n    this.messageInput.nativeElement.value = '';\r\n  }\r\n\r\n  addMessage(newMessage: MessageModel): void {\r\n    const messages = [...this.messages$.value];\r\n    messages.push(newMessage);\r\n    this.messages$.next(messages);\r\n  }\r\n\r\n  getUser(user: number): UserInfoModel {\r\n    return defaultUserInfos[user];\r\n  }\r\n\r\n  getMessageCssClass(message: MessageModel): string {\r\n    return `p-5 rounded text-dark fw-bold mw-lg-400px bg-light-${\r\n      message.type === 'in' ? 'info' : 'primary'\r\n    } text-${message.type === 'in' ? 'start' : 'end'}`;\r\n  }\r\n\r\n  ngOnInit(): void {}\r\n}\r\n","<div\r\n  class=\"scroll-y me-n5 pe-5\"\r\n  [ngClass]=\"!isDrawer ? 'h-300px h-lg-auto' : ''\"\r\n  data-kt-element=\"messages\"\r\n  data-kt-scroll=\"true\"\r\n  data-kt-scroll-activate=\"{default: false, lg: true}\"\r\n  data-kt-scroll-max-height=\"auto\"\r\n  [attr.data-kt-scroll-dependencies]=\"\r\n    isDrawer\r\n      ? '#kt_drawer_chat_messenger_header, #kt_drawer_chat_messenger_footer'\r\n      : '#kt_header, #kt_toolbar, #kt_footer, #kt_chat_messenger_header, #kt_chat_messenger_footer'\r\n  \"\r\n  [attr.data-kt-scroll-wrappers]=\"\r\n    isDrawer\r\n      ? '#kt_drawer_chat_messenger_body'\r\n      : '#kt_content, #kt_chat_messenger_body'\r\n  \"\r\n  [attr.data-kt-scroll-offset]=\"isDrawer ? '0px' : '-2px'\"\r\n>\r\n  <ng-container *ngFor=\"let message of messagesObs | async\">\r\n    <div\r\n      [ngClass]=\"{\r\n        'd-flex': !isDrawer,\r\n        'd-none': message.template,\r\n        'justify-content-start': message.type === 'in',\r\n        'justify-content-end': message.type !== 'in'\r\n      }\"\r\n      [attr.data-kt-element]=\"'template-' + message.type\"\r\n      class=\"mb-10\"\r\n    >\r\n      <div\r\n        class=\"d-flex flex-column align-items\"\r\n        [ngClass]=\"'align-items-' + (message.type === 'in' ? 'start' : 'end')\"\r\n      >\r\n        <div class=\"d-flex align-items-center mb-2\">\r\n          <ng-container *ngIf=\"message.type === 'in'\">\r\n            <div div class=\"symbol symbol-35px symbol-circle\">\r\n              <img\r\n                alt=\"Pic\"\r\n                [src]=\"'./assets/media/' + getUser(message.user).avatar\"\r\n              />\r\n            </div>\r\n            <div class=\"ms-3\">\r\n              <a\r\n                href=\"#\"\r\n                class=\"fs-5 fw-bolder text-gray-900 text-hover-primary me-1\"\r\n              >\r\n                {{ getUser(message.user).name }}\r\n              </a>\r\n              <span class=\"text-muted fs-7 mb-1\">{{ message.time }}</span>\r\n            </div>\r\n          </ng-container>\r\n          <ng-container *ngIf=\"message.type !== 'in'\">\r\n            <div class=\"me-3\">\r\n              <span class=\"text-muted fs-7 mb-1\">{{ message.time }}</span>\r\n              <a\r\n                href=\"#\"\r\n                class=\"fs-5 fw-bolder text-gray-900 text-hover-primary ms-1\"\r\n              >\r\n                You\r\n              </a>\r\n            </div>\r\n            <div class=\"symbol symbol-35px symbol-circle\">\r\n              <img\r\n                alt=\"Pic\"\r\n                [src]=\"'./assets/media/' + getUser(message.user).avatar\"\r\n              />\r\n            </div>\r\n          </ng-container>\r\n        </div>\r\n\r\n        <div\r\n          [ngClass]=\"getMessageCssClass(message)\"\r\n          data-kt-element=\"message-text\"\r\n          [innerHTML]=\"message.text\"\r\n        ></div>\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n</div>\r\n\r\n<div\r\n  class=\"card-footer pt-4\"\r\n  [id]=\"\r\n    isDrawer ? 'kt_drawer_chat_messenger_footer' : 'kt_chat_messenger_footer'\r\n  \"\r\n>\r\n  <textarea\r\n    #messageInput\r\n    class=\"form-control form-control-flush mb-3\"\r\n    rows=\"1\"\r\n    data-kt-element=\"input\"\r\n    placeholder=\"Type a message\"\r\n  ></textarea>\r\n\r\n  <div class=\"d-flex flex-stack\">\r\n    <div class=\"d-flex align-items-center me-2\">\r\n      <button\r\n        class=\"btn btn-sm btn-icon btn-active-light-primary me-1\"\r\n        type=\"button\"\r\n        ngbTooltip=\"Coming soon\"\r\n      >\r\n        <i class=\"bi bi-paperclip fs-3\"></i>\r\n      </button>\r\n      <button\r\n        class=\"btn btn-sm btn-icon btn-active-light-primary me-1\"\r\n        type=\"button\"\r\n        ngbTooltip=\"Coming soon\"\r\n      >\r\n        <i class=\"bi bi-upload fs-3\"></i>\r\n      </button>\r\n    </div>\r\n    <button\r\n      class=\"btn btn-primary\"\r\n      type=\"button\"\r\n      data-kt-element=\"send\"\r\n      (click)=\"submitMessage()\"\r\n    >\r\n      Send\r\n    </button>\r\n  </div>\r\n</div>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}