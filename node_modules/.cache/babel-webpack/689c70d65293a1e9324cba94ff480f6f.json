{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@ngx-translate/core\";\n\nfunction LoginComponent_ng_container_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22);\n    i0.ɵɵtext(3, \" Use account \");\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" and password \");\n    i0.ɵɵelementStart(7, \"strong\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(9, \" to continue. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.defaultAuth.username);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(ctx_r0.defaultAuth.password);\n  }\n}\n\nfunction LoginComponent_ng_container_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 23);\n    i0.ɵɵelementStart(2, \"div\", 24);\n    i0.ɵɵtext(3, \" The login details are incorrect \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 25);\n    i0.ɵɵtext(2, \" Please wait... \");\n    i0.ɵɵelement(3, \"span\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", \"block\");\n  }\n}\n\nfunction LoginComponent_ng_container_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 27);\n    i0.ɵɵtext(2, \"Continue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_template_41_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 28);\n    i0.ɵɵelementStart(2, \"span\", 29);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r7 = i0.ɵɵnextContext().message;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r7, \" \");\n  }\n}\n\nfunction LoginComponent_ng_template_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoginComponent_ng_template_41_ng_container_0_Template, 4, 1, \"ng-container\", 5);\n  }\n\n  if (rf & 2) {\n    const control_r6 = ctx.control;\n    const validation_r8 = ctx.validation;\n    i0.ɵɵproperty(\"ngIf\", control_r6.hasError(validation_r8) && (control_r6.dirty || control_r6.touched));\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c1 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Email is required\",\n    control: a2\n  };\n};\n\nconst _c2 = function (a2) {\n  return {\n    validation: \"minLength\",\n    message: \"Email should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c3 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Email should have maximum 360 symbols\",\n    control: a2\n  };\n};\n\nconst _c4 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Password is required\",\n    control: a2\n  };\n};\n\nconst _c5 = function (a2) {\n  return {\n    validation: \"minlength\",\n    message: \"Password should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c6 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Password should have maximum 100 symbols\",\n    control: a2\n  };\n};\n\nexport class LoginComponent {\n  constructor(fb, authService, route, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.route = route;\n    this.router = router; // KeenThemes mock, change it to:\n\n    this.defaultAuth = {\n      username: 'admin1',\n      password: 'demo'\n    }; // private fields\n\n    this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n    this.isLoading$ = this.authService.isLoading$; // redirect to home if already logged in\n\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.initForm(); // get return url from route parameters or default to '/'\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n  } // convenience getter for easy access to form fields\n\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      username: [this.defaultAuth.username, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n      ])],\n      password: [this.defaultAuth.password, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])]\n    });\n  }\n\n  submit() {\n    this.hasError = false;\n    let userForm = {\n      userName: this.loginForm.controls.username.value,\n      password: this.loginForm.controls.password.value,\n      authorities: []\n    };\n    const loginSubscr = this.authService.login(userForm).pipe(first()).subscribe(user => {\n      if (user) {\n        this.router.navigate(['/issuing']);\n      } else {\n        this.hasError = true;\n      }\n    });\n    this.unsubscribe.push(loginSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach(sb => sb.unsubscribe());\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 43,\n  vars: 50,\n  consts: [[\"novalidate\", \"novalidate\", \"id\", \"kt_login_signin_form\", 1, \"form\", \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-10\"], [1, \"text-dark\", \"mb-3\"], [1, \"text-gray-400\", \"fw-bold\", \"fs-4\"], [\"routerLink\", \"/auth/registration\", \"id\", \"kt_login_signup\", 1, \"link-primary\", \"fw-bolder\"], [4, \"ngIf\"], [1, \"fv-row\", \"mb-10\"], [1, \"form-label\", \"fs-6\", \"fw-bolder\", \"text-dark\"], [\"type\", \"text\", \"name\", \"username\", \"formControlName\", \"username\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"d-flex\", \"justify-content-between\", \"mt-n5\"], [1, \"d-flex\", \"flex-stack\", \"mb-2\"], [1, \"form-label\", \"fw-bolder\", \"text-dark\", \"fs-6\", \"mb-0\"], [\"routerLink\", \"/auth/forgot-password\", \"id\", \"kt_login_forgot\", 1, \"link-primary\", \"fs-6\", \"fw-bolder\"], [\"type\", \"password\", \"name\", \"password\", \"autocomplete\", \"off\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"kt_sign_in_submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"w-100\", \"mb-5\", 3, \"disabled\"], [1, \"text-center\", \"text-muted\", \"text-uppercase\", \"fw-bolder\", \"mb-5\"], [1, \"btn\", \"btn-flex\", \"flex-center\", \"btn-light\", \"btn-lg\", \"w-100\", \"mb-5\", \"cursor-pointer\"], [\"src\", \"./assets/media/svg/brand-logos/google-icon.svg\", 1, \"h-20px\", \"me-3\"], [\"formError\", \"\"], [1, \"mb-10\", \"bg-light-info\", \"p-8\", \"rounded\"], [1, \"text-info\"], [1, \"mb-lg-15\", \"alert\", \"alert-danger\"], [1, \"alert-text\", \"font-weight-bold\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"], [1, \"indicator-label\"], [1, \"fv-plugins-message-container\"], [\"role\", \"alert\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1);\n      i0.ɵɵelementStart(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"CMSOFT\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtext(5);\n      i0.ɵɵpipe(6, \"translate\");\n      i0.ɵɵelementStart(7, \"a\", 4);\n      i0.ɵɵtext(8);\n      i0.ɵɵpipe(9, \"translate\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(10, LoginComponent_ng_container_10_Template, 10, 2, \"ng-container\", 5);\n      i0.ɵɵtemplate(11, LoginComponent_ng_container_11_Template, 4, 0, \"ng-container\", 5);\n      i0.ɵɵelementStart(12, \"div\", 6);\n      i0.ɵɵelementStart(13, \"label\", 7);\n      i0.ɵɵtext(14, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementContainer(16, 9);\n      i0.ɵɵelementContainer(17, 9);\n      i0.ɵɵelementContainer(18, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"div\", 6);\n      i0.ɵɵelementStart(20, \"div\", 10);\n      i0.ɵɵelementStart(21, \"div\", 11);\n      i0.ɵɵelementStart(22, \"label\", 12);\n      i0.ɵɵtext(23, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"a\", 13);\n      i0.ɵɵtext(25, \" Forgot Password ? \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(26, \"input\", 14);\n      i0.ɵɵelementContainer(27, 9);\n      i0.ɵɵelementContainer(28, 9);\n      i0.ɵɵelementContainer(29, 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"div\", 15);\n      i0.ɵɵelementStart(31, \"button\", 16);\n      i0.ɵɵtemplate(32, LoginComponent_ng_container_32_Template, 4, 2, \"ng-container\", 5);\n      i0.ɵɵpipe(33, \"async\");\n      i0.ɵɵtemplate(34, LoginComponent_ng_container_34_Template, 3, 0, \"ng-container\", 5);\n      i0.ɵɵpipe(35, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"div\", 17);\n      i0.ɵɵtext(37, \"or\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(38, \"a\", 18);\n      i0.ɵɵelement(39, \"img\", 19);\n      i0.ɵɵtext(40, \" Continue with Google \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(41, LoginComponent_ng_template_41_Template, 1, 1, \"ng-template\", null, 20, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r4 = i0.ɵɵreference(42);\n\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(6, 24, \"AUTH.GENERAL.REGISTER\"), \" \");\n      i0.ɵɵadvance(3);\n      i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(9, 26, \"AUTH.GENERAL.SIGNUP_BUTTON\"));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !ctx.hasError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(32, _c0, ctx.loginForm.controls[\"username\"].invalid, ctx.loginForm.controls[\"username\"].valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(35, _c1, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(37, _c2, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(39, _c3, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(6);\n      i0.ɵɵstyleProp(\"margin-left\", \"5px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(41, _c0, ctx.loginForm.controls[\"password\"].invalid, ctx.loginForm.controls[\"password\"].valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(44, _c4, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(46, _c5, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r4)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(48, _c6, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(33, 28, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(35, 30, ctx.isLoading$));\n    }\n  },\n  directives: [i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i3.RouterLinkWithHref, i4.NgIf, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i4.NgClass, i4.NgTemplateOutlet],\n  pipes: [i5.TranslatePipe, i4.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\n  width: 100%;\\n}\\n@media (min-width: 992px) {\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 450px;\\n  }\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGO0FBQUU7RUFDRTtJQUNFLFdBQUE7SUFDQSxnQkFBQTtFQUVKO0VBQUk7SUFDRSxXQUFBO0VBRU47QUFDRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcclxuICB3aWR0aDogMTAwJTtcclxuICBAbWVkaWEgKG1pbi13aWR0aDogOTkycHgpIHtcclxuICAgIC5sb2dpbi1mb3JtIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIG1heC13aWR0aDogNDUwcHg7XHJcblxyXG4gICAgICAubWF0LWZvcm0tZmllbGQge1xyXG4gICAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ== */\"]\n});","map":{"version":3,"sources":["/Users/andres.mayorga/Projects/CMSOFT/cmsoft-angular/src/app/modules/auth/components/login/login.component.ts","/Users/andres.mayorga/Projects/CMSOFT/cmsoft-angular/src/app/modules/auth/components/login/login.component.html"],"names":[],"mappings":"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","sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\r\nimport {Observable, Subscription} from 'rxjs';\r\nimport {first} from 'rxjs/operators';\r\nimport {UserModel} from '../../models/user.model';\r\nimport {AuthService} from '../../services/auth.service';\r\nimport {ActivatedRoute, Router} from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss'],\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  // KeenThemes mock, change it to:\r\n  defaultAuth: any = {\r\n    username: 'admin1',\r\n    password: 'demo',\r\n  };\r\n  loginForm: FormGroup;\r\n  hasError: boolean;\r\n  returnUrl: string;\r\n  isLoading$: Observable<boolean>;\r\n  user: UserModel;\r\n\r\n  // private fields\r\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    private route: ActivatedRoute,\r\n    private router: Router\r\n  ) {\r\n    this.isLoading$ = this.authService.isLoading$;\r\n    // redirect to home if already logged in\r\n    if (this.authService.currentUserValue) {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.initForm();\r\n    // get return url from route parameters or default to '/'\r\n    this.returnUrl =\r\n      this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n\r\n  initForm() {\r\n    this.loginForm = this.fb.group({\r\n      username: [\r\n        this.defaultAuth.username,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\r\n        ]),\r\n      ],\r\n      password: [\r\n        this.defaultAuth.password,\r\n        Validators.compose([\r\n          Validators.required,\r\n          Validators.minLength(3),\r\n          Validators.maxLength(100),\r\n        ]),\r\n      ],\r\n    });\r\n  }\r\n\r\n  submit() {\r\n    this.hasError = false;\r\n    let userForm = {\r\n      userName: this.loginForm.controls.username.value,\r\n      password: this.loginForm.controls.password.value,\r\n      authorities: [\r\n\r\n      ]\r\n    }\r\n    const loginSubscr = this.authService\r\n      .login(userForm)\r\n      .pipe(first())\r\n      .subscribe((user: UserModel | undefined) => {\r\n        if (user) {\r\n          this.router.navigate(['/issuing']);\r\n        } else {\r\n          this.hasError = true;\r\n        }\r\n      });\r\n    this.unsubscribe.push(loginSubscr);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\r\n  }\r\n}\r\n","<!--begin::Form-->\r\n<form\r\n  class=\"form w-100\"\r\n  [formGroup]=\"loginForm\"\r\n  novalidate=\"novalidate\"\r\n  id=\"kt_login_signin_form\"\r\n  (ngSubmit)=\"submit()\"\r\n>\r\n  <!--begin::Heading-->\r\n  <div class=\"text-center mb-10\">\r\n    <h1 class=\"text-dark mb-3\">CMSOFT</h1>\r\n    <div class=\"text-gray-400 fw-bold fs-4\">\r\n      {{ \"AUTH.GENERAL.REGISTER\" | translate }}\r\n      <a\r\n        routerLink=\"/auth/registration\"\r\n        id=\"kt_login_signup\"\r\n        class=\"link-primary fw-bolder\"\r\n        >{{ \"AUTH.GENERAL.SIGNUP_BUTTON\" | translate }}</a\r\n      >\r\n    </div>\r\n  </div>\r\n  <!--end::Heading-->\r\n\r\n  <!-- begin::Alert info-->\r\n  <ng-container *ngIf=\"!hasError\">\r\n    <div class=\"mb-10 bg-light-info p-8 rounded\">\r\n      <div class=\"text-info\">\r\n        Use account <strong>{{ defaultAuth.username }}</strong> and password\r\n        <strong>{{ defaultAuth.password }}</strong> to continue.\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <!-- end::Alert info-->\r\n\r\n  <!-- begin::Alert error-->\r\n  <ng-container *ngIf=\"hasError\">\r\n    <div class=\"mb-lg-15 alert alert-danger\">\r\n      <div class=\"alert-text font-weight-bold\">\r\n        The login details are incorrect\r\n      </div>\r\n    </div>\r\n  </ng-container>\r\n  <!-- end::Alert error-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-10\">\r\n    <label class=\"form-label fs-6 fw-bolder text-dark\">Email</label>\r\n    <input\r\n      class=\"form-control form-control-lg form-control-solid\"\r\n      type=\"text\"\r\n      name=\"username\"\r\n      formControlName=\"username\"\r\n      autocomplete=\"off\"\r\n      [ngClass]=\"{\r\n        'is-invalid': loginForm.controls['username'].invalid,\r\n        'is-valid': loginForm.controls['username'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Email is required',\r\n        control: loginForm.controls['username']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minLength',\r\n        message: 'Email should have at least 3 symbols',\r\n        control: loginForm.controls['username']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Email should have maximum 360 symbols',\r\n        control: loginForm.controls['username']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Form group-->\r\n  <div class=\"fv-row mb-10\">\r\n    <div class=\"d-flex justify-content-between mt-n5\">\r\n      <div class=\"d-flex flex-stack mb-2\">\r\n        <label class=\"form-label fw-bolder text-dark fs-6 mb-0\">Password</label>\r\n        <a\r\n          routerLink=\"/auth/forgot-password\"\r\n          class=\"link-primary fs-6 fw-bolder\"\r\n          id=\"kt_login_forgot\"\r\n          [style.margin-left]=\"'5px'\"\r\n        >\r\n          Forgot Password ?\r\n        </a>\r\n      </div>\r\n    </div>\r\n\r\n    <input\r\n      class=\"form-control form-control-lg form-control-solid\"\r\n      type=\"password\"\r\n      name=\"password\"\r\n      autocomplete=\"off\"\r\n      formControlName=\"password\"\r\n      [ngClass]=\"{\r\n        'is-invalid': loginForm.controls['password'].invalid,\r\n        'is-valid': loginForm.controls['password'].valid\r\n      }\"\r\n    />\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'required',\r\n        message: 'Password is required',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'minlength',\r\n        message: 'Password should have at least 3 symbols',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n    <ng-container\r\n      [ngTemplateOutlet]=\"formError\"\r\n      [ngTemplateOutletContext]=\"{\r\n        validation: 'maxLength',\r\n        message: 'Password should have maximum 100 symbols',\r\n        control: loginForm.controls['password']\r\n      }\"\r\n    ></ng-container>\r\n  </div>\r\n  <!--end::Form group-->\r\n\r\n  <!--begin::Action-->\r\n  <div class=\"text-center\">\r\n    <button\r\n      type=\"submit\"\r\n      id=\"kt_sign_in_submit\"\r\n      class=\"btn btn-lg btn-primary w-100 mb-5\"\r\n      [disabled]=\"loginForm.invalid\"\r\n    >\r\n      <ng-container *ngIf=\"isLoading$ | async\">\r\n        <span class=\"indicator-progress\" [style.display]=\"'block'\">\r\n          Please wait...\r\n          <span\r\n            class=\"spinner-border spinner-border-sm align-middle ms-2\"\r\n          ></span>\r\n        </span>\r\n      </ng-container>\r\n      <ng-container *ngIf=\"!(isLoading$ | async)\">\r\n        <span class=\"indicator-label\">Continue</span>\r\n      </ng-container>\r\n    </button>\r\n\r\n    <!-- begin::Separator  -->\r\n    <div class=\"text-center text-muted text-uppercase fw-bolder mb-5\">or</div>\r\n    <!-- end::Separator  -->\r\n\r\n    <a\r\n      class=\"\r\n        btn btn-flex\r\n        flex-center\r\n        btn-light btn-lg\r\n        w-100\r\n        mb-5\r\n        cursor-pointer\r\n      \"\r\n    >\r\n      <img\r\n        class=\"h-20px me-3\"\r\n        src=\"./assets/media/svg/brand-logos/google-icon.svg\"\r\n      />\r\n\r\n      Continue with Google\r\n    </a>\r\n  </div>\r\n  <!--end::Action-->\r\n</form>\r\n<!--end::Form-->\r\n\r\n<ng-template\r\n  #formError\r\n  let-control=\"control\"\r\n  let-message=\"message\"\r\n  let-validation=\"validation\"\r\n>\r\n  <ng-container\r\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\r\n  >\r\n    <div class=\"fv-plugins-message-container\">\r\n      <span role=\"alert\">\r\n        {{ message }}\r\n      </span>\r\n    </div>\r\n  </ng-container>\r\n</ng-template>\r\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}