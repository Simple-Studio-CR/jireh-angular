{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/router\";\n\nfunction ForgotPasswordComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 14)(2, \"div\", 15);\n    i0.ɵɵtext(3, \" Sorry, looks like there are some errors detected, please try again. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 16)(2, \"div\", 17);\n    i0.ɵɵtext(3, \"Sent password reset. Please check your email\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_ng_container_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 18);\n    i0.ɵɵtext(2, \" Please wait... \");\n    i0.ɵɵelement(3, \"span\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction ForgotPasswordComponent_ng_template_24_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 20)(2, \"div\", 21)(3, \"span\", 22);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().message;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(message_r6);\n  }\n}\n\nfunction ForgotPasswordComponent_ng_template_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, ForgotPasswordComponent_ng_template_24_ng_container_0_Template, 5, 1, \"ng-container\", 4);\n  }\n\n  if (rf & 2) {\n    const control_r5 = ctx.control;\n    const validation_r7 = ctx.validation;\n    i0.ɵɵproperty(\"ngIf\", control_r5.hasError(validation_r7) && (control_r5.dirty || control_r5.touched));\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c1 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Email is required\",\n    control: a2\n  };\n};\n\nconst _c2 = function (a2) {\n  return {\n    validation: \"email\",\n    message: \"Email is invalid\",\n    control: a2\n  };\n};\n\nconst _c3 = function (a2) {\n  return {\n    validation: \"minLength\",\n    message: \"Email should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c4 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Email should have maximum 360 symbols\",\n    control: a2\n  };\n};\n\nvar ErrorStates;\n\n(function (ErrorStates) {\n  ErrorStates[ErrorStates[\"NotSubmitted\"] = 0] = \"NotSubmitted\";\n  ErrorStates[ErrorStates[\"HasError\"] = 1] = \"HasError\";\n  ErrorStates[ErrorStates[\"NoError\"] = 2] = \"NoError\";\n})(ErrorStates || (ErrorStates = {}));\n\nexport class ForgotPasswordComponent {\n  constructor(fb, authService) {\n    this.fb = fb;\n    this.authService = authService;\n    this.errorState = ErrorStates.NotSubmitted;\n    this.errorStates = ErrorStates; // private fields\n\n    this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n    this.isLoading$ = this.authService.isLoading$;\n  }\n\n  ngOnInit() {\n    this.initForm();\n  } // convenience getter for easy access to form fields\n\n\n  get f() {\n    return this.forgotPasswordForm.controls;\n  }\n\n  initForm() {\n    this.forgotPasswordForm = this.fb.group({\n      email: ['admin@demo.com', Validators.compose([Validators.required, Validators.email, Validators.minLength(3), Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n      ])]\n    });\n  }\n\n  submit() {\n    this.errorState = ErrorStates.NotSubmitted;\n    const forgotPasswordSubscr = this.authService.forgotPassword(this.f.email.value).pipe(first()).subscribe(result => {\n      this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\n    });\n    this.unsubscribe.push(forgotPasswordSubscr);\n  }\n\n}\n\nForgotPasswordComponent.ɵfac = function ForgotPasswordComponent_Factory(t) {\n  return new (t || ForgotPasswordComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService));\n};\n\nForgotPasswordComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ForgotPasswordComponent,\n  selectors: [[\"app-forgot-password\"]],\n  decls: 26,\n  vars: 26,\n  consts: [[\"novalidate\", \"novalidate\", \"id\", \"kt_login_password_reset_form\", 1, \"form\", \"w-100\", \"fv-plugins-bootstrap5\", \"fv-plugins-framework\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-10\"], [1, \"text-dark\", \"mb-3\"], [1, \"text-gray-400\", \"fw-bold\", \"fs-4\"], [4, \"ngIf\"], [1, \"fv-row\", \"mb-10\"], [1, \"form-label\", \"fw-bolder\", \"text-gray-900\", \"fs-6\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Email\", \"name\", \"email\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"d-flex\", \"flex-wrap\", \"justify-content-center\", \"pb-lg-0\"], [\"type\", \"submit\", \"id\", \"kt_password_reset_submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"fw-bolder\", \"me-4\"], [1, \"indicator-label\"], [\"routerLink\", \"/auth/login\", \"id\", \"kt_login_password_reset_form_cancel_button\", 1, \"btn\", \"btn-lg\", \"btn-light-primary\", \"fw-bolder\"], [\"formError\", \"\"], [1, \"mb-lg-15\", \"alert\", \"alert-danger\"], [1, \"alert-text\", \"font-weight-bold\"], [1, \"mb-10\", \"bg-light-info\", \"p-8\", \"rounded\"], [1, \"text-info\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"], [1, \"fv-plugins-message-container\"], [1, \"fv-help-block\"], [\"role\", \"alert\"]],\n  template: function ForgotPasswordComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function ForgotPasswordComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Forgotten Password ?\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 3);\n      i0.ɵɵtext(5, \" Enter your email to reset your password. \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(6, ForgotPasswordComponent_ng_container_6_Template, 4, 0, \"ng-container\", 4);\n      i0.ɵɵtemplate(7, ForgotPasswordComponent_ng_container_7_Template, 4, 0, \"ng-container\", 4);\n      i0.ɵɵelementStart(8, \"div\", 5)(9, \"label\", 6);\n      i0.ɵɵtext(10, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"input\", 7);\n      i0.ɵɵelementContainer(12, 8)(13, 8)(14, 8)(15, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 9)(17, \"button\", 10)(18, \"span\", 11);\n      i0.ɵɵtext(19, \"Submit\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(20, ForgotPasswordComponent_ng_container_20_Template, 4, 0, \"ng-container\", 4);\n      i0.ɵɵpipe(21, \"async\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(22, \"a\", 12);\n      i0.ɵɵtext(23, \" Cancel \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(24, ForgotPasswordComponent_ng_template_24_Template, 1, 1, \"ng-template\", null, 13, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(25);\n\n      i0.ɵɵproperty(\"formGroup\", ctx.forgotPasswordForm);\n      i0.ɵɵadvance(6);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorState === ctx.errorStates.HasError);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.errorState === ctx.errorStates.NoError);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(15, _c0, ctx.forgotPasswordForm.controls[\"email\"].invalid, ctx.forgotPasswordForm.controls[\"email\"].valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(18, _c1, ctx.forgotPasswordForm.controls[\"email\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(20, _c2, ctx.forgotPasswordForm.controls[\"email\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(22, _c3, ctx.forgotPasswordForm.controls[\"email\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(24, _c4, ctx.forgotPasswordForm.controls[\"email\"]));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(21, 13, ctx.isLoading$));\n    }\n  },\n  dependencies: [i3.NgClass, i3.NgIf, i3.NgTemplateOutlet, i4.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i3.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\n  width: 100%;\\n}\\n@media (min-width: 992px) {\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 450px;\\n  }\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImZvcmdvdC1wYXNzd29yZC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFdBQUE7QUFDRjtBQUFFO0VBQ0U7SUFDRSxXQUFBO0lBQ0EsZ0JBQUE7RUFFSjtFQUFJO0lBQ0UsV0FBQTtFQUVOO0FBQ0YiLCJmaWxlIjoiZm9yZ290LXBhc3N3b3JkLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiOmhvc3Qge1xuICB3aWR0aDogMTAwJTtcbiAgQG1lZGlhIChtaW4td2lkdGg6IDk5MnB4KSB7XG4gICAgLmxvZ2luLWZvcm0ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBtYXgtd2lkdGg6IDQ1MHB4O1xuXG4gICAgICAubWF0LWZvcm0tZmllbGQge1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","first","i0","ErrorStates","ForgotPasswordComponent","constructor","fb","authService","NotSubmitted","isLoading$","ngOnInit","initForm","f","forgotPasswordForm","controls","group","email","compose","required","minLength","maxLength","submit","errorState","forgotPasswordSubscr","forgotPassword","value","pipe","subscribe","result","NoError","HasError","unsubscribe","push","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/andres.mayorga/Projects/JIREH/jireh-angular/src/app/modules/auth/components/forgot-password/forgot-password.component.ts","/Users/andres.mayorga/Projects/JIREH/jireh-angular/src/app/modules/auth/components/forgot-password/forgot-password.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Observable, Subscription } from 'rxjs';\nimport { AuthService } from '../../services/auth.service';\nimport { first } from 'rxjs/operators';\n\nenum ErrorStates {\n  NotSubmitted,\n  HasError,\n  NoError,\n}\n\n@Component({\n  selector: 'app-forgot-password',\n  templateUrl: './forgot-password.component.html',\n  styleUrls: ['./forgot-password.component.scss'],\n})\nexport class ForgotPasswordComponent implements OnInit {\n  forgotPasswordForm: FormGroup;\n  errorState: ErrorStates = ErrorStates.NotSubmitted;\n  errorStates = ErrorStates;\n  isLoading$: Observable<boolean>;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n  constructor(private fb: FormBuilder, private authService: AuthService) {\n    this.isLoading$ = this.authService.isLoading$;\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.forgotPasswordForm.controls;\n  }\n\n  initForm() {\n    this.forgotPasswordForm = this.fb.group({\n      email: [\n        'admin@demo.com',\n        Validators.compose([\n          Validators.required,\n          Validators.email,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.errorState = ErrorStates.NotSubmitted;\n    const forgotPasswordSubscr = this.authService\n      .forgotPassword(this.f.email.value)\n      .pipe(first())\n      .subscribe((result: boolean) => {\n        this.errorState = result ? ErrorStates.NoError : ErrorStates.HasError;\n      });\n    this.unsubscribe.push(forgotPasswordSubscr);\n  }\n}\n","<form\n  class=\"form w-100 fv-plugins-bootstrap5 fv-plugins-framework\"\n  novalidate=\"novalidate\"\n  [formGroup]=\"forgotPasswordForm\"\n  (ngSubmit)=\"submit()\"\n  id=\"kt_login_password_reset_form\"\n>\n  <!--begin::Title-->\n  <div class=\"text-center mb-10\">\n    <h1 class=\"text-dark mb-3\">Forgotten Password ?</h1>\n    <div class=\"text-gray-400 fw-bold fs-4\">\n      Enter your email to reset your password.\n    </div>\n  </div>\n  <!--end::Title-->\n\n  <!-- begin::Alert error-->\n  <ng-container *ngIf=\"errorState === errorStates.HasError\">\n    <div class=\"mb-lg-15 alert alert-danger\">\n      <div class=\"alert-text font-weight-bold\">\n        Sorry, looks like there are some errors detected, please try again.\n      </div>\n    </div>\n  </ng-container>\n  <!-- end::Alert error-->\n\n  <ng-container *ngIf=\"errorState === errorStates.NoError\">\n    <div class=\"mb-10 bg-light-info p-8 rounded\">\n      <!--begin::Body-->\n      <div class=\"text-info\">Sent password reset. Please check your email</div>\n      <!--end::Body-->\n    </div>\n  </ng-container>\n\n  <!--begin::Form group-->\n  <div class=\"fv-row mb-10\">\n    <label class=\"form-label fw-bolder text-gray-900 fs-6\">Email</label>\n    <input\n      class=\"form-control form-control-lg form-control-solid\"\n      type=\"email\"\n      formControlName=\"email\"\n      placeholder=\"Email\"\n      name=\"email\"\n      autocomplete=\"off\"\n      [ngClass]=\"{\n        'is-invalid': forgotPasswordForm.controls['email'].invalid,\n        'is-valid': forgotPasswordForm.controls['email'].valid\n      }\"\n    />\n\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'required',\n        message: 'Email is required',\n        control: forgotPasswordForm.controls['email']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'email',\n        message: 'Email is invalid',\n        control: forgotPasswordForm.controls['email']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'minLength',\n        message: 'Email should have at least 3 symbols',\n        control: forgotPasswordForm.controls['email']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'maxLength',\n        message: 'Email should have maximum 360 symbols',\n        control: forgotPasswordForm.controls['email']\n      }\"\n    ></ng-container>\n  </div>\n  <!--end::Form group-->\n  <!--begin::Form group-->\n  <div class=\"d-flex flex-wrap justify-content-center pb-lg-0\">\n    <button\n      type=\"submit\"\n      id=\"kt_password_reset_submit\"\n      class=\"btn btn-lg btn-primary fw-bolder me-4\"\n    >\n      <span class=\"indicator-label\">Submit</span>\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"indicator-progress\">\n          Please wait...\n          <span\n            class=\"spinner-border spinner-border-sm align-middle ms-2\"\n          ></span>\n        </span>\n      </ng-container>\n    </button>\n    <a\n      routerLink=\"/auth/login\"\n      id=\"kt_login_password_reset_form_cancel_button\"\n      class=\"btn btn-lg btn-light-primary fw-bolder\"\n    >\n      Cancel\n    </a>\n  </div>\n  <!--end::Form group-->\n</form>\n<!--end::Form-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <div class=\"fv-help-block\">\n        <span role=\"alert\">{{ message }}</span>\n      </div>\n    </div>\n  </ng-container>\n</ng-template>\n"]},"metadata":{},"sourceType":"module"}