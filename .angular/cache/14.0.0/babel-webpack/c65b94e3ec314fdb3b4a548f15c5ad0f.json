{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { first } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\n\nfunction LoginComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 17)(2, \"div\", 18);\n    i0.ɵɵtext(3, \" The login details are incorrect \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 19);\n    i0.ɵɵtext(2, \" Please wait... \");\n    i0.ɵɵelement(3, \"span\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵstyleProp(\"display\", \"block\");\n  }\n}\n\nfunction LoginComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"span\", 21);\n    i0.ɵɵtext(2, \"Continue\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction LoginComponent_ng_template_30_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22)(2, \"span\", 23);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const message_r6 = i0.ɵɵnextContext().message;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", message_r6, \" \");\n  }\n}\n\nfunction LoginComponent_ng_template_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, LoginComponent_ng_template_30_ng_container_0_Template, 4, 1, \"ng-container\", 4);\n  }\n\n  if (rf & 2) {\n    const control_r5 = ctx.control;\n    const validation_r7 = ctx.validation;\n    i0.ɵɵproperty(\"ngIf\", control_r5.hasError(validation_r7) && (control_r5.dirty || control_r5.touched));\n  }\n}\n\nconst _c0 = function (a0, a1) {\n  return {\n    \"is-invalid\": a0,\n    \"is-valid\": a1\n  };\n};\n\nconst _c1 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Email is required\",\n    control: a2\n  };\n};\n\nconst _c2 = function (a2) {\n  return {\n    validation: \"minLength\",\n    message: \"Email should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c3 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Email should have maximum 360 symbols\",\n    control: a2\n  };\n};\n\nconst _c4 = function (a2) {\n  return {\n    validation: \"required\",\n    message: \"Password is required\",\n    control: a2\n  };\n};\n\nconst _c5 = function (a2) {\n  return {\n    validation: \"minlength\",\n    message: \"Password should have at least 3 symbols\",\n    control: a2\n  };\n};\n\nconst _c6 = function (a2) {\n  return {\n    validation: \"maxLength\",\n    message: \"Password should have maximum 100 symbols\",\n    control: a2\n  };\n};\n\nexport class LoginComponent {\n  constructor(fb, authService, route, router) {\n    this.fb = fb;\n    this.authService = authService;\n    this.route = route;\n    this.router = router; // KeenThemes mock, change it to:\n\n    this.defaultAuth = {\n      username: 'admin1',\n      password: 'demo'\n    }; // private fields\n\n    this.unsubscribe = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n    this.isLoading$ = this.authService.isLoading$; // redirect to home if already logged in\n\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit() {\n    this.initForm(); // get return url from route parameters or default to '/'\n\n    this.returnUrl = this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n  } // convenience getter for easy access to form fields\n\n\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      username: [this.defaultAuth.username, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(320) // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n      ])],\n      password: [this.defaultAuth.password, Validators.compose([Validators.required, Validators.minLength(3), Validators.maxLength(100)])]\n    });\n  }\n\n  submit() {\n    this.hasError = false;\n    let userForm = {\n      userName: this.loginForm.controls.username.value,\n      password: this.loginForm.controls.password.value,\n      authorities: []\n    };\n    const loginSubscr = this.authService.login(userForm).pipe(first()).subscribe(user => {\n      if (user) {\n        this.router.navigate(['/dashboard']);\n      } else {\n        this.hasError = true;\n      }\n    });\n    this.unsubscribe.push(loginSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach(sb => sb.unsubscribe());\n  }\n\n}\n\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router));\n};\n\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 32,\n  vars: 43,\n  consts: [[\"novalidate\", \"novalidate\", \"id\", \"kt_login_signin_form\", 1, \"form\", \"w-100\", 3, \"formGroup\", \"ngSubmit\"], [1, \"text-center\", \"mb-10\"], [1, \"text-dark\", \"mb-3\"], [1, \"text-gray-400\", \"fw-bold\", \"fs-4\"], [4, \"ngIf\"], [1, \"fv-row\", \"mb-10\"], [1, \"form-label\", \"fs-6\", \"fw-bolder\", \"text-dark\"], [\"type\", \"text\", \"name\", \"username\", \"formControlName\", \"username\", \"autocomplete\", \"off\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"d-flex\", \"justify-content-between\", \"mt-n5\"], [1, \"d-flex\", \"flex-stack\", \"mb-2\"], [1, \"form-label\", \"fw-bolder\", \"text-dark\", \"fs-6\", \"mb-0\"], [\"routerLink\", \"/auth/forgot-password\", \"id\", \"kt_login_forgot\", 1, \"link-primary\", \"fs-6\", \"fw-bolder\"], [\"type\", \"password\", \"name\", \"password\", \"autocomplete\", \"off\", \"formControlName\", \"password\", 1, \"form-control\", \"form-control-lg\", \"form-control-solid\", 3, \"ngClass\"], [1, \"text-center\"], [\"type\", \"submit\", \"id\", \"kt_sign_in_submit\", 1, \"btn\", \"btn-lg\", \"btn-primary\", \"w-100\", \"mb-5\", 3, \"disabled\"], [\"formError\", \"\"], [1, \"mb-lg-15\", \"alert\", \"alert-danger\"], [1, \"alert-text\", \"font-weight-bold\"], [1, \"indicator-progress\"], [1, \"spinner-border\", \"spinner-border-sm\", \"align-middle\", \"ms-2\"], [1, \"indicator-label\"], [1, \"fv-plugins-message-container\"], [\"role\", \"alert\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"form\", 0);\n      i0.ɵɵlistener(\"ngSubmit\", function LoginComponent_Template_form_ngSubmit_0_listener() {\n        return ctx.submit();\n      });\n      i0.ɵɵelementStart(1, \"div\", 1)(2, \"h1\", 2);\n      i0.ɵɵtext(3, \"Fumigadora Jireh\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(4, \"div\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(5, LoginComponent_ng_container_5_Template, 4, 0, \"ng-container\", 4);\n      i0.ɵɵelementStart(6, \"div\", 5)(7, \"label\", 6);\n      i0.ɵɵtext(8, \"Email\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(9, \"input\", 7);\n      i0.ɵɵelementContainer(10, 8)(11, 8)(12, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(13, \"div\", 5)(14, \"div\", 9)(15, \"div\", 10)(16, \"label\", 11);\n      i0.ɵɵtext(17, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"a\", 12);\n      i0.ɵɵtext(19, \" Olvid\\u00F3 la contrase\\u00F1a ? \");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(20, \"input\", 13);\n      i0.ɵɵelementContainer(21, 8)(22, 8)(23, 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"div\", 14)(25, \"button\", 15);\n      i0.ɵɵtemplate(26, LoginComponent_ng_container_26_Template, 4, 2, \"ng-container\", 4);\n      i0.ɵɵpipe(27, \"async\");\n      i0.ɵɵtemplate(28, LoginComponent_ng_container_28_Template, 3, 0, \"ng-container\", 4);\n      i0.ɵɵpipe(29, \"async\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵtemplate(30, LoginComponent_ng_template_30_Template, 1, 1, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r3 = i0.ɵɵreference(31);\n\n      i0.ɵɵproperty(\"formGroup\", ctx.loginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ctx.hasError);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(25, _c0, ctx.loginForm.controls[\"username\"].invalid, ctx.loginForm.controls[\"username\"].valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(28, _c1, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(30, _c2, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(32, _c3, ctx.loginForm.controls[\"username\"]));\n      i0.ɵɵadvance(6);\n      i0.ɵɵstyleProp(\"margin-left\", \"5px\");\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(34, _c0, ctx.loginForm.controls[\"password\"].invalid, ctx.loginForm.controls[\"password\"].valid));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(37, _c4, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(39, _c5, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngTemplateOutlet\", _r3)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(41, _c6, ctx.loginForm.controls[\"password\"]));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"disabled\", ctx.loginForm.invalid);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(27, 21, ctx.isLoading$));\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(29, 23, ctx.isLoading$));\n    }\n  },\n  dependencies: [i4.NgClass, i4.NgIf, i4.NgTemplateOutlet, i3.RouterLinkWithHref, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe],\n  styles: [\"[_nghost-%COMP%] {\\n  width: 100%;\\n}\\n@media (min-width: 992px) {\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%] {\\n    width: 100%;\\n    max-width: 450px;\\n  }\\n  [_nghost-%COMP%]   .login-form[_ngcontent-%COMP%]   .mat-form-field[_ngcontent-%COMP%] {\\n    width: 100%;\\n  }\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImxvZ2luLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsV0FBQTtBQUNGO0FBQUU7RUFDRTtJQUNFLFdBQUE7SUFDQSxnQkFBQTtFQUVKO0VBQUk7SUFDRSxXQUFBO0VBRU47QUFDRiIsImZpbGUiOiJsb2dpbi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIjpob3N0IHtcbiAgd2lkdGg6IDEwMCU7XG4gIEBtZWRpYSAobWluLXdpZHRoOiA5OTJweCkge1xuICAgIC5sb2dpbi1mb3JtIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgbWF4LXdpZHRoOiA0NTBweDtcblxuICAgICAgLm1hdC1mb3JtLWZpZWxkIHtcbiAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"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","names":["Validators","first","i0","LoginComponent","constructor","fb","authService","route","router","username","password","isLoading$","currentUserValue","navigate","ngOnInit","initForm","returnUrl","snapshot","queryParams","toString","f","loginForm","controls","group","defaultAuth","compose","required","minLength","maxLength","submit","hasError","userForm","userName","value","authorities","loginSubscr","login","pipe","subscribe","user","unsubscribe","push","ngOnDestroy","forEach","sb","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/andres.mayorga/Projects/JIREH/jireh-angular/src/app/modules/auth/components/login/login.component.ts","/Users/andres.mayorga/Projects/JIREH/jireh-angular/src/app/modules/auth/components/login/login.component.html"],"sourcesContent":["import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {Observable, Subscription} from 'rxjs';\nimport {first} from 'rxjs/operators';\nimport {UserModel} from '../../models/user.model';\nimport {AuthService} from '../../services/auth.service';\nimport {ActivatedRoute, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, OnDestroy {\n  // KeenThemes mock, change it to:\n  defaultAuth: any = {\n    username: 'admin1',\n    password: 'demo',\n  };\n  loginForm: FormGroup;\n  hasError: boolean;\n  returnUrl: string;\n  isLoading$: Observable<boolean>;\n  user: UserModel;\n\n  // private fields\n  private unsubscribe: Subscription[] = []; // Read more: => https://brianflove.com/2016/12/11/anguar-2-unsubscribe-observables/\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private route: ActivatedRoute,\n    private router: Router\n  ) {\n    this.isLoading$ = this.authService.isLoading$;\n    // redirect to home if already logged in\n    if (this.authService.currentUserValue) {\n      this.router.navigate(['/']);\n    }\n  }\n\n  ngOnInit(): void {\n    this.initForm();\n    // get return url from route parameters or default to '/'\n    this.returnUrl =\n      this.route.snapshot.queryParams['returnUrl'.toString()] || '/';\n  }\n\n  // convenience getter for easy access to form fields\n  get f() {\n    return this.loginForm.controls;\n  }\n\n  initForm() {\n    this.loginForm = this.fb.group({\n      username: [\n        this.defaultAuth.username,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(320), // https://stackoverflow.com/questions/386294/what-is-the-maximum-length-of-a-valid-email-address\n        ]),\n      ],\n      password: [\n        this.defaultAuth.password,\n        Validators.compose([\n          Validators.required,\n          Validators.minLength(3),\n          Validators.maxLength(100),\n        ]),\n      ],\n    });\n  }\n\n  submit() {\n    this.hasError = false;\n    let userForm = {\n      userName: this.loginForm.controls.username.value,\n      password: this.loginForm.controls.password.value,\n      authorities: [\n\n      ]\n    }\n    const loginSubscr = this.authService\n      .login(userForm)\n      .pipe(first())\n      .subscribe((user: UserModel | undefined) => {\n        if (user) {\n          this.router.navigate(['/dashboard']);\n        } else {\n          this.hasError = true;\n        }\n      });\n    this.unsubscribe.push(loginSubscr);\n  }\n\n  ngOnDestroy() {\n    this.unsubscribe.forEach((sb) => sb.unsubscribe());\n  }\n}\n","<!--begin::Form-->\n<form\n  class=\"form w-100\"\n  [formGroup]=\"loginForm\"\n  novalidate=\"novalidate\"\n  id=\"kt_login_signin_form\"\n  (ngSubmit)=\"submit()\"\n>\n  <!--begin::Heading-->\n  <div class=\"text-center mb-10\">\n    <h1 class=\"text-dark mb-3\">Fumigadora Jireh</h1>\n    <div class=\"text-gray-400 fw-bold fs-4\">\n    </div>\n  </div>\n  <!--end::Heading-->\n\n  <!-- begin::Alert error-->\n  <ng-container *ngIf=\"hasError\">\n    <div class=\"mb-lg-15 alert alert-danger\">\n      <div class=\"alert-text font-weight-bold\">\n        The login details are incorrect\n      </div>\n    </div>\n  </ng-container>\n  <!-- end::Alert error-->\n\n  <!--begin::Form group-->\n  <div class=\"fv-row mb-10\">\n    <label class=\"form-label fs-6 fw-bolder text-dark\">Email</label>\n    <input\n      class=\"form-control form-control-lg form-control-solid\"\n      type=\"text\"\n      name=\"username\"\n      formControlName=\"username\"\n      autocomplete=\"off\"\n      [ngClass]=\"{\n        'is-invalid': loginForm.controls['username'].invalid,\n        'is-valid': loginForm.controls['username'].valid\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'required',\n        message: 'Email is required',\n        control: loginForm.controls['username']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'minLength',\n        message: 'Email should have at least 3 symbols',\n        control: loginForm.controls['username']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'maxLength',\n        message: 'Email should have maximum 360 symbols',\n        control: loginForm.controls['username']\n      }\"\n    ></ng-container>\n  </div>\n  <!--end::Form group-->\n\n  <!--begin::Form group-->\n  <div class=\"fv-row mb-10\">\n    <div class=\"d-flex justify-content-between mt-n5\">\n      <div class=\"d-flex flex-stack mb-2\">\n        <label class=\"form-label fw-bolder text-dark fs-6 mb-0\">Password</label>\n        <a\n          routerLink=\"/auth/forgot-password\"\n          class=\"link-primary fs-6 fw-bolder\"\n          id=\"kt_login_forgot\"\n          [style.margin-left]=\"'5px'\"\n        >\n          Olvidó la contraseña ?\n        </a>\n      </div>\n    </div>\n\n    <input\n      class=\"form-control form-control-lg form-control-solid\"\n      type=\"password\"\n      name=\"password\"\n      autocomplete=\"off\"\n      formControlName=\"password\"\n      [ngClass]=\"{\n        'is-invalid': loginForm.controls['password'].invalid,\n        'is-valid': loginForm.controls['password'].valid\n      }\"\n    />\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'required',\n        message: 'Password is required',\n        control: loginForm.controls['password']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'minlength',\n        message: 'Password should have at least 3 symbols',\n        control: loginForm.controls['password']\n      }\"\n    ></ng-container>\n    <ng-container\n      [ngTemplateOutlet]=\"formError\"\n      [ngTemplateOutletContext]=\"{\n        validation: 'maxLength',\n        message: 'Password should have maximum 100 symbols',\n        control: loginForm.controls['password']\n      }\"\n    ></ng-container>\n  </div>\n  <!--end::Form group-->\n\n  <!--begin::Action-->\n  <div class=\"text-center\">\n    <button\n      type=\"submit\"\n      id=\"kt_sign_in_submit\"\n      class=\"btn btn-lg btn-primary w-100 mb-5\"\n      [disabled]=\"loginForm.invalid\"\n    >\n      <ng-container *ngIf=\"isLoading$ | async\">\n        <span class=\"indicator-progress\" [style.display]=\"'block'\">\n          Please wait...\n          <span\n            class=\"spinner-border spinner-border-sm align-middle ms-2\"\n          ></span>\n        </span>\n      </ng-container>\n      <ng-container *ngIf=\"!(isLoading$ | async)\">\n        <span class=\"indicator-label\">Continue</span>\n      </ng-container>\n    </button>\n\n    <!-- begin::Separator  -->\n    <!-- end::Separator  -->\n  </div>\n  <!--end::Action-->\n</form>\n<!--end::Form-->\n\n<ng-template\n  #formError\n  let-control=\"control\"\n  let-message=\"message\"\n  let-validation=\"validation\"\n>\n  <ng-container\n    *ngIf=\"control.hasError(validation) && (control.dirty || control.touched)\"\n  >\n    <div class=\"fv-plugins-message-container\">\n      <span role=\"alert\">\n        {{ message }}\n      </span>\n    </div>\n  </ng-container>\n</ng-template>\n"]},"metadata":{},"sourceType":"module"}